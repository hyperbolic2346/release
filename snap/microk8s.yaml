name: microk8s
architectures: ['$SNAP_ARCH']
version: '$KUBE_VERSION'
summary: microk8s
description: microk8s description
grade: stable
confinement: classic

apps:
  daemon-etcd:
    command: etcd --data-dir=${SNAP_DATA}
    daemon: simple
    plugs:
        - network
        - network-bind
  daemon-docker:
    command: dockerd -H unix://${SNAP_DATA}/docker.sock   --exec-root ${SNAP_DATA} --graph ${SNAP_DATA} --pidfile ${SNAP_DATA}/docker-pid
    daemon: simple
    plugs:
        - network
        - network-bind
  daemon-apiserver:
    command: kube-apiserver --v=0 --insecure-bind-address=0.0.0.0 --cert-dir=${SNAP_DATA} --etcd-servers='http://127.0.0.1:2379' --service-cluster-ip-range=10.152.183.0/24 --authorization-mode=AlwaysAllow --basic-auth-file=$SNAP/basic_auth.csv  --token-auth-file=$SNAP/known_token.csv --admission-control=""
    daemon: simple
    plugs:
        - network
        - network-bind
  daemon-controller-manager:
    command: kube-controller-manager --v=0 --master='http://127.0.0.1:8080'
    daemon: simple
    plugs:
        - network
        - network-bind
  daemon-scheduler:
    command: kube-scheduler --v=0 --master='http://127.0.0.1:8080'
    daemon: simple
    plugs:
        - network
        - network-bind
        - home
  daemon-kubelet:
    command: kubelet --v=0 --cert-dir=${SNAP_DATA} --network-plugin=kubenet --root-dir=${SNAP_DATA} --docker-root=${SNAP_DATA} --fail-swap-on=false --feature-gates=DevicePlugins=false --pod-cidr=10.1.1.0/24 --non-masquerade-cidr=10.152.183.0/24 --cni-bin-dir=${SNAP}/opt/cni/bin/ --kubeconfig=$SNAP/kubelet.config --docker-endpoint unix://${SNAP_DATA}/docker.sock
    daemon: simple
    plugs:
        - network
        - network-bind
        - home
  daemon-proxy:
    command: kube-proxy --v=0 --master='http://127.0.0.1:8080' --cluster-cidr=10.152.183.0/24 --kubeconfig=$SNAP/kubeproxy.config
    daemon: simple
    plugs:
        - network
        - network-bind
        - home
  kubectl:
    command: kubectl --kubeconfig=$SNAP/client.config

parts:
  microk8s:
    plugin: dump
    build-attributes: [no-patchelf]
    stage-packages:
    - ceph-common:$SNAP_ARCH
    - conntrack:$SNAP_ARCH
    - docker.io:$SNAP_ARCH
    source: .
    prepare: |
      set -eux
      echo "Preparing etcd"
      mkdir -p opt/cni/bin/
      cp $KUBE_SNAP_BINS/flannel opt/cni/bin/
      cp $KUBE_SNAP_BINS/ptp opt/cni/bin/
      cp $KUBE_SNAP_BINS/host-local opt/cni/bin/
      cp $KUBE_SNAP_BINS/portmap opt/cni/bin/
      cp $KUBE_SNAP_BINS/tuning opt/cni/bin/
      cp $KUBE_SNAP_BINS/vlan opt/cni/bin/
      cp $KUBE_SNAP_BINS/sample opt/cni/bin/
      cp $KUBE_SNAP_BINS/dhcp opt/cni/bin/
      cp $KUBE_SNAP_BINS/ipvlan opt/cni/bin/
      cp $KUBE_SNAP_BINS/macvlan opt/cni/bin/
      cp $KUBE_SNAP_BINS/loopback opt/cni/bin/
      cp $KUBE_SNAP_BINS/bridge opt/cni/bin/

      echo "Preparing etcd"
      cp $KUBE_SNAP_BINS/etcd .

      echo "Preparing kube-apiserver"
      cp $KUBE_SNAP_BINS/$KUBE_ARCH/kube-apiserver .
      cp $KUBE_SNAP_ROOT/microk8s-resources/known_token.csv .
      cp $KUBE_SNAP_ROOT/microk8s-resources/basic_auth.csv .

      echo "Preparing kube-controller-manager"
      cp $KUBE_SNAP_BINS/$KUBE_ARCH/kube-controller-manager .

      echo "Preparing kube-scheduler"
      cp $KUBE_SNAP_BINS/$KUBE_ARCH/kube-scheduler .

      echo "Preparing kubelet"
      cp $KUBE_SNAP_BINS/$KUBE_ARCH/kubelet .
      cp $KUBE_SNAP_ROOT/microk8s-resources/kubelet.config .

      echo "Preparing kube-proxy"
      cp $KUBE_SNAP_BINS/$KUBE_ARCH/kube-proxy .
      cp $KUBE_SNAP_ROOT/microk8s-resources/kubeproxy.config .

      echo "Preparing kubelet"
      cp $KUBE_SNAP_BINS/$KUBE_ARCH/kubectl .

      echo "Preparing user config"
      cp $KUBE_SNAP_ROOT/microk8s-resources/client.config .

    snap:
      - .
